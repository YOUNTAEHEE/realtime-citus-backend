spring:
  application:
    name: realtime
  web:
    cors:
      allowed-origins:
        - http://localhost:5173
        - http://localhost:3000
        - http://localhost:3001 # React 개발 서버 주소
        - https://realtime-citus-nagp.vercel.app
      allowed-methods: GET,POST,PUT,DELETE,OPTIONS
      allowed-headers: "*"
      allow-credentials: true
    resources:
      add-mappings: false
  mvc:
    throw-exception-if-no-handler-found: true
  data:
    mongodb:
      host: localhost
      port: 27017
      database: test
  websocket:
    allowed-origins: "*" # 웹소켓 CORS 설정 추가
    path-mappings:
      /ws/modbus: webSocketHandler
      /ws/opcua: opcuaWebSocketHandler
  task:
    scheduling:
      pool:
        size: 5
      thread-name-prefix: scheduled-
    execution:
      shutdown:
        await-termination: true
        await-termination-period: 60s

server:
  port: 8080

weather:
  api:
    key: ${WEATHER_API_KEY}

logging:
  level:
    root: WARN
    org.springframework: WARN
    com.yth.realtime: INFO
    com.influxdb.client: WARN
    com.yth.realtime.service: OFF
    org.springframework.scheduling: WARN
    com.ghgande.j2mod.modbus.io: ERROR
    com.yth.realtime.controller.WebSocketHandler: OFF

influxdb:
  url: http://localhost:8086 # InfluxDB 서버 주소
  token: ${INFLUX_TOKEN}
  org: youn # InfluxDB Organization 이름
  bucket: ydata # 기본 버킷 이름
  write-timeout: 30000 # 쓰기 타임아웃 30초로 증가
  read-timeout: 30000 # 읽기 타임아웃 30초로 증가
  retention-policy: autogen # 데이터 보존 정책 (기본값: autogen)
  timeout: 5000 # 요청 타임아웃 (ms)
  connection-pool-size: 10 # 연결 풀 크기 (동시 연결 제한)
  logging-level: BODY # 로그 레벨 (NONE, BASIC, HEADERS, BODY 중 선택)
  scheduler:
    delay: 60000 # 1분

opcua:
  enabled: true
  endpoint: opc.tcp://server:4840

modbus:
  enabled: true
  reconnect-delay: 5000
  connection-timeout: 10000
